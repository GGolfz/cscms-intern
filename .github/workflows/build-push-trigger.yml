name: Build, Push, and Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-push-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: thetkpark/cscms-intern-frontend
          tags: |
            type=raw,value=latest
            type=sha,format=long,prefix=
      - name: Docker Login
        uses: docker/login-action@v1.10.0
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Build and push frontend images
        uses: docker/build-push-action@v2.6.1
        with:
          context: './frontend'
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  build-and-push-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: thetkpark/cscms-intern-backend
          tags: |
            type=raw,value=latest
            type=sha,format=long,prefix=
      - name: Docker Login
        uses: docker/login-action@v1.10.0
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Build and push backend images
        uses: docker/build-push-action@v2.6.1
        with:
          context: './backend'
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  trigger-deployment:
    needs: [build-and-push-frontend, build-and-push-backend]
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Deployment
        uses: fjogeleit/http-request-action@v1.8.0
        if: ${{ github.event_name != 'pull_request' }}
        with:
          url: https://api.github.com/repos/thetkpark/cscms-services-deployment/dispatches
          method: POST
          data: '{"event_type": "cscms-intern"}'
          username: ${{secrets.ACCESS_TOKEN}}
